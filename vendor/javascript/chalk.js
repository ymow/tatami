import r from"escape-string-regexp";import e from"ansi-styles";import t from"strip-ansi";import o from"has-ansi";import n from"supports-color";import a from"process";var s={};var i=a;var l=r;var p=e;var c=t;var u=o;var f=n;var v=Object.defineProperties;var h="win32"===i.platform&&!/^xterm/i.test(i.env.TERM);function Chalk(r){this.enabled=r&&void 0!==r.enabled?r.enabled:f}h&&(p.blue.open="[94m");var m=function(){var r={};Object.keys(p).forEach((function(e){p[e].closeRe=new RegExp(l(p[e].close),"g");r[e]={get:function(){return build.call(this,this._styles.concat(e))}}}));return r}();var d=v((function chalk(){}),m);function build(r){var builder=function(){return applyStyle.apply(builder,arguments)};builder._styles=r;builder.enabled=this.enabled;builder.__proto__=d;return builder}function applyStyle(){var r=arguments;var e=r.length;var t=0!==e&&String(arguments[0]);if(e>1)for(var o=1;o<e;o++)t+=" "+r[o];if(!this.enabled||!t)return t;var n=this._styles;var a=n.length;var s=p.dim.open;!h||-1===n.indexOf("gray")&&-1===n.indexOf("grey")||(p.dim.open="");while(a--){var i=p[n[a]];t=i.open+t.replace(i.closeRe,i.open)+i.close}p.dim.open=s;return t}function init(){var r={};Object.keys(m).forEach((function(e){r[e]={get:function(){return build.call(this,[e])}}}));return r}v(Chalk.prototype,init());s=new Chalk;s.styles=p;s.hasColor=u;s.stripColor=c;s.supportsColor=f;var y=s;const b=s.hasColor,g=s.stripColor;const C=s.styles,x=s.supportsColor;export default y;export{b as hasColor,g as stripColor,C as styles,x as supportsColor};

